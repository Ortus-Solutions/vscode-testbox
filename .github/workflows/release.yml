name: Release

on:
  release:
    types:
      - published

  # Reusable workflow : Usually called by a `snapshot` workflow
  workflow_call:
    inputs:
      snapshot:
        description: "Is this a snapshot build?"
        required: false
        default: false
        type: boolean
      publishMS:
        type: boolean
        required: false
        default: false
      publishOVSX:
        type: boolean
        required: false
        default: false
      publishGH:
        type: boolean
        required: false
        default: false

  # Manually trigger the workflow
  workflow_dispatch:
    inputs:
      snapshot:
        description: "Is this a snapshot build?"
        required: false
        default: false
        type: boolean
      publishMS:
        description: 'Publish to the VS Marketplace'
        type: boolean
        required: true
        default: true
      publishOVSX:
        description: 'Publish to OpenVSX'
        type: boolean
        required: true
        default: true
      publishGH:
        description: 'Publish to GitHub Releases'
        type: boolean
        required: true
        default: true

env:
  PACKAGE_NAME: ${{ github.event.repository.name }}
  NODE_VERSION: 18
  SNAPSHOT: ${{ inputs.snapshot || false }}
  BUILD_ID: ${{ github.run_number }}

jobs:
  package:
    name: Package
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.setup-tag.outputs.tag }}
      version: ${{ steps.setup-tag.outputs.version }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm i

      - name: Setup Build Environment
        run: |
            echo "PACKAGE_VERSION=`node -e "console.log( require('./package.json').version )"`" >> $GITHUB_ENV
            echo "PACKAGE_FILE_NAME=`node -e "console.log( require('./package.json').name + '-' + require('./package.json').version + '.vsix')"`" >> $GITHUB_ENV

      - name: Package Extension
        run: |
          npx vsce package

      - name: Upload package to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_FILE_NAME }}
          path: |
            ./${{ env.PACKAGE_FILE_NAME }}
            ./CHANGELOG.md
          if-no-files-found: error

      - name: Setup tag
        id: setup-tag
        run: |
          $version = (Get-Content ./package.json -Raw | ConvertFrom-Json).version
          Write-Host "tag: release/$version"
          "tag=release/$version" >> $env:GITHUB_OUTPUT
          "version=$version" >> $env:GITHUB_OUTPUT
        shell: pwsh

  # Publish to VS Marketplace
  publishMS:
    name: Publish to VS marketplace
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.publishMS == 'true'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.PACKAGE_FILE_NAME }}

      - name: Publish to VS marketplace
        run: npx vsce publish --packagePath ./${{ env.PACKAGE_FILE_NAME }} -p ${{ secrets.VSCE_PAT }}

  # Publish to OpenVSX
  publishOVSX:
    name: Publish to OpenVSX
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.publishOVSX == 'true'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.PACKAGE_FILE_NAME }}

      - name: Publish to OpenVSX
        run: npx ovsx publish ./${{ env.PACKAGE_FILE_NAME }} -p ${{ secrets.OVSX_PAT }}

  # Publish to GitHub Releases
  publishGH:
    name: Publish to GitHub releases
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.publishGH == 'true'
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.PACKAGE_FILE_NAME }}

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.package.outputs.tag }}
          release_name: v${{ ENV.PACKAGE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload assets to a Release
        uses: AButler/upload-release-assets@v3.0
        with:
          files: |
            ${{ env.PACKAGE_FILE_NAME }}}
            CHANGELOG.md
          release-tag: ${{ needs.package.outputs.tag }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  # Publish artifact to S3
  publishS3:
    name: Publish to S3
    runs-on: ubuntu-latest
    needs: package
    if: success()
    steps:
      - uses: actions/download-artifact@v4
        with:
            name: ${{ env.PACKAGE_FILE_NAME }}

      - name: Prepare Upload Folder
        run: |
            mkdir upload
            mv ${{ env.PACKAGE_FILE_NAME }} upload/
            cp CHANGELOG.md upload/

      - name: Upload Distributions to S3
        uses: jakejarvis/s3-sync-action@master
        with:
            args: --acl public-read
        env:
            AWS_S3_BUCKET: "downloads.ortussolutions.com"
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_SECRET }}
            SOURCE_DIR: "upload"
            DEST_DIR: "ortussolutions/vscode-boxlang/${{ env.PACKAGE_VERSION }}"
